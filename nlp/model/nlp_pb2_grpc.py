# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import nlp_pb2 as nlp__pb2


class NLPStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.KeywordExtract = channel.unary_unary(
        '/nlp.NLP/KeywordExtract',
        request_serializer=nlp__pb2.KeywordRequest.SerializeToString,
        response_deserializer=nlp__pb2.KeywordResponse.FromString,
        )
    self.KeywordExtractStream = channel.stream_unary(
        '/nlp.NLP/KeywordExtractStream',
        request_serializer=nlp__pb2.KeywordRequest.SerializeToString,
        response_deserializer=nlp__pb2.KeywordResponse.FromString,
        )


class NLPServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def KeywordExtract(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def KeywordExtractStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NLPServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'KeywordExtract': grpc.unary_unary_rpc_method_handler(
          servicer.KeywordExtract,
          request_deserializer=nlp__pb2.KeywordRequest.FromString,
          response_serializer=nlp__pb2.KeywordResponse.SerializeToString,
      ),
      'KeywordExtractStream': grpc.stream_unary_rpc_method_handler(
          servicer.KeywordExtractStream,
          request_deserializer=nlp__pb2.KeywordRequest.FromString,
          response_serializer=nlp__pb2.KeywordResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nlp.NLP', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
